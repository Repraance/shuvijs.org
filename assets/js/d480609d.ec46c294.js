"use strict";(self.webpackChunkshuvi_document=self.webpackChunkshuvi_document||[]).push([[8281],{9613:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4927:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return d}});var r=n(7813),o=n(7044),a=(n(9496),n(9613)),i=["components"],u={sidebar_position:81,id:"Data Fetching"},l=void 0,s={unversionedId:"guide/features/Data Fetching",id:"guide/features/Data Fetching",title:"Data Fetching",description:"Shuvi provides a feature to fetch initial data when server-side rendering or route navigation for route component.",source:"@site/docs/guide/features/data-fetching.md",sourceDirName:"guide/features",slug:"/guide/features/Data Fetching",permalink:"/shuvijs.org/docs/guide/features/Data Fetching",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide/features/data-fetching.md",tags:[],version:"current",sidebarPosition:81,frontMatter:{sidebar_position:81,id:"Data Fetching"},sidebar:"guideSidebar",previous:{title:"Custom Runtime",permalink:"/shuvijs.org/docs/guide/features/Custom Runtime"},next:{title:"Custom Document",permalink:"/shuvijs.org/docs/guide/features/Custom Document"}},c={},d=[],p={toc:d};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Shuvi provides a feature to fetch initial data when server-side rendering or route navigation for route component."),(0,a.kt)("p",null,"Each route module can export a component and a ",(0,a.kt)("inlineCode",{parentName:"p"},"loader"),". And ",(0,a.kt)("inlineCode",{parentName:"p"},"useLoaderData")," hook will provide the data that ",(0,a.kt)("inlineCode",{parentName:"p"},"loader")," returns."),(0,a.kt)("p",null,"Take a look at the simple example as the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useLoaderData, Loader } from '@shuvi/runtime';\n\nconst RouteComponent = () => {\n  // highlight-next-line\n  const data = useLoaderData<LoaderData>();\n  return (\n    <div>\n      <p>{data?.hello}</p>\n    </div>\n  );\n};\n\ntype LoaderData = {\n  hello: string;\n};\n\nasync function doSomethingAsync () {\n  // do something async\n}\n\n// highlight-start\nexport const loader: Loader<LoaderData> = async ctx => {\n  await doSomethingAsync()\n  return {\n    hello: 'world'\n  };\n};\n// highlight-end\n\n\nexport default RouteComponent;\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"loader")," is isomorphic and it will run before every server-side or client-side initial rendering and every route navigation."),(0,a.kt)("p",null,"Shuvi allows nested routes. All ",(0,a.kt)("inlineCode",{parentName:"p"},"loader"),"s of matched route modules will run one by one or parallelly according to the config."),(0,a.kt)("p",null,"By default, when using server-side rendering, all ",(0,a.kt)("inlineCode",{parentName:"p"},"loader"),"s will run at server-side and then render to string and send to browser."),(0,a.kt)("p",null,"During hydrating, if ",(0,a.kt)("inlineCode",{parentName:"p"},"loader")))}f.isMDXComponent=!0}}]);