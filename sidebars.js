/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */

// @ts-check
const fs = require('fs-extra');

const getTocFromId = id => {
  const src = fs.readFileSync(`./docs/${id}.md`, 'utf-8');
  const h2s = src.match(/^## [^\n]+/gm);
  const cacheAnchor = new Map();
  let headers = [];
  if (h2s) {
    headers = h2s.map(h => {
      const value = h
        .slice(2)
        .replace(/<sup class=.*/, '')
        .replace(/\\</g, '<')
        .replace(/`([^`]+)`/g, '$1')
        .trim();

      let anchor = value
        .toLowerCase()
        .replace(' ', '-')
        .replace(/[^a-zA-Z0-9_-]/g, '');
      if (cacheAnchor.has(anchor)) {
        cacheAnchor.set(anchor, cacheAnchor.get(anchor) + 1);
        anchor = anchor + '-' + cacheAnchor.get(anchor);
      } else {
        cacheAnchor.set(anchor, 0);
      }
      return { value, anchor };
    });
  }
  return headers;
};

/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
const sidebars = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  guidesSidebar: [{ type: 'autogenerated', dirName: 'guides' }],
  apiSidebar: [{ type: 'autogenerated', dirName: 'api' }],

  docs: [
    'introduction',
    {
      type: 'category',
      label: 'Getting Stared',
      items: ['tutorials', 'playground'],
      link: {
        type: 'doc',
        id: 'tutorials',
      },
      collapsed: false,
      collapsible: false,
    },
    {
      type: 'link',
      label: 'Guides',
      href: '/docs/guides',
    },
    // In order to generate the API directory, we must manually add the sidebar below.
    {
      type: 'category',
      label: 'API Reference',
      link: {
        type: 'doc',
        id: 'api-reference/api-reference',
      },
      collapsed: false,
      collapsible: false,
      items: [
        {
          type: 'category',
          label: 'Global API',
          items: [
            {
              type: 'doc',
              id: 'api-reference/application',
              customProps: {
                headers: getTocFromId('api-reference/application'),
              },
            },
            {
              type: 'doc',
              id: 'api-reference/general',
              customProps: {
                headers: getTocFromId('api-reference/general'),
              },
            },
          ],
        },
        {
          type: 'category',
          label: 'Composition API',
          items: [
            {
              type: 'doc',
              id: 'api-reference/setup',
              customProps: {
                headers: getTocFromId('api-reference/setup'),
              },
            },
            {
              type: 'doc',
              id: 'api-reference/lifecycle-hook',
              customProps: {
                headers: getTocFromId('api-reference/lifecycle-hook'),
              },
            },
          ],
          customProps: { test: 'test2' },
        },
      ],
    },
    // {
    //   "Getting Stared": ["tutorials", "playground"]
    // },
    // {
    //   "Guides"
    // }
  ],
  // But you can create a sidebar manually
  /*
  tutorialSidebar: [
    {
      type: 'category',
      label: 'Tutorial',
      items: ['hello'],
    },
  ],
   */
};

module.exports = sidebars;
